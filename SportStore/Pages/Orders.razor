@page "/admin/orders"
@inherits OwningComponentBase<IOrderRepository>

<OrderTable TableTitle="Недоставленные продукты"
            Orders="UnshippedOrders" ButtonLabel="Доставить" OrderSelected="ShipOrder"/>
<OrderTable TableTitle="Доставленные продукты"
            Orders="ShippedOrders" ButtonLabel="Сбросить" OrderSelected="ResetOrder" />
<button class="btn btn-info" @onclick="@(e => UpdateData())">Обновить</button>

@code {
    public IOrderRepository Repository => Service;

    public IEnumerable<Order> AllOrders { get; set; }
    public IEnumerable<Order> ShippedOrders { get; set; }
    public IEnumerable<Order> UnshippedOrders { get; set; }

    protected async override Task OnInitializedAsync()
    {
        await UpdateData();
    }

    public async Task UpdateData()
    {
        AllOrders = await Repository.Orders.ToListAsync();
        UnshippedOrders = AllOrders.Where(x => !x.IsShipped);
        ShippedOrders = AllOrders.Where(x => x.IsShipped);
    }

    public void ShipOrder(int id) => UpdateOrder(id, true);
    public void ResetOrder(int id) => UpdateOrder(id, false);

    private void UpdateOrder(int id, bool ship) {
        Order o = Repository.Orders.FirstOrDefault(o => o.OrderID == id);
        o.IsShipped = ship;
        Repository.SaveOrder(o);
    }
}